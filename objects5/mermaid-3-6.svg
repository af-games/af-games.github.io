<svg width="800" height="600" xmlns="http://www.w3.org/2000/svg">
```

2. **Create the background**: Add a gradient background to set the tone for the tapestry.

```svg
<rect width="100%" height="100%" fill="url(#gradient)"/>
<defs>
  <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="100%">
    <stop offset="0%" style="stop-color:lightblue; stop-opacity:1" />
    <stop offset="100%" style="stop-color:pink; stop-opacity:1" />
  </linearGradient>
</defs>
```

3. **Design the outer frame**: Start from the edges by creating an intricate border using interconnected lines and shapes.

```svg
<g stroke="black" fill="none">
  <!-- Add your complex line patterns here -->
  <polyline points="10,10 190,20 10,190 20,10"/>
</g>
```

4. **Build up intricate details in the center**: Gradually add more details towards the center of the tapestry.

```svg
<!-- Mermaid's hair -->
<path d="M350,50 Q370,30 400,50 Q380,70 420,50 Q410,30 440,50" stroke="brown"/>

<!-- Mermaid's face -->
<circle cx="400" cy="150" r="80"/>
<path d="M360,150 Q390,120 420,150 Q450,180 390,210"/>

<!-- Mermaid's tail -->
<polyline points="400,400 370,470 430,470"/>
```

5. **Ensure harmony throughout the design**: Use interconnected patterns and maintain consistency in colors and styles to create a harmonious overall design.

```svg
<!-- Interconnected patterns -->
<g stroke="purple" fill="none">
  <path d="M100,200 A80,80 0 0 0 180,280 A80,80 0 0 1 360,200"/>
</g>
```

6. **Translate the tapestry into an SVG file**: Save your work as an SVG file with the appropriate filename and encoding.

```svg
</svg>