<svg xmlns="http://www.w3.org/2000/svg" viewBox="-100 -100 200 200">
  <defs>
    <length id="unit">5</length> <!-- Unit length in SVG units -->
    <color id="sea">#006BA4</color> <!-- Sea color -->
    <color id="land">#6B8E23</color> <!-- Land color (for sea floor) -->
    <color id="mermaid_tail">#F1C40F</color> <!-- Mermaid tail color -->
    <color id="mermaid_hair">#FF7F50</color> <!-- Mermaid hair color -->
    <color id="treasure_chest">#CBC3E3</color> <!-- Treasure chest color -->
  </defs>
```

Next, let's plot some points and draw paths for common mermaid features:

1. **Sea**: The sea will be represented by a large circle with the `sea` color.

```xml
<circle cx="0" cy="0" r="90" fill="url(#sea)" />
```

2. **Sea floor (land)**: A smaller circle representing the sea floor with the `land` color.

```xml
<circle cx="0" cy="0" r="85" fill="url(#land)" />
```

3. **Mermaid tails**: Mermaids will be represented by semicircular arcs for their tails, with the `mermaid_tail` color. We'll plot points around a circle at radius 75 and connect them with curved paths.

```xml
<path d="M -75 0 A 75 75 0 1 1 75 0" stroke="none" fill="url(#mermaid_tail)" />
<!-- Repeat the above path for other mermaids around the circle -->
```

4. **Mermaid hair**: Mermaid hair will be represented by wavy lines with the `mermaid_hair` color, extending from their tails.

```xml
<path d="M -75 0 Q -60 -20 0 -30 Q 60 -20 75 0" stroke="black" fill="transparent" stroke-width="1.5" />
<!-- Repeat and vary the path for other mermaids -->
```

5. **Treasure chests**: Treasure chests will be represented by small rectangles with the `treasure_chest` color, scattered around the sea floor.

```xml
<rect x="-60" y="-40" width="20" height="10" fill="url(#treasure_chest)" />
<!-- Repeat and vary the position for other treasure chests -->
```

To ensure balance in the map's composition, I'll use a symmetrical layout with mermaids and treasure chests evenly distributed around the circle. The use of circles and arcs helps create a harmonious, underwater-world feel.

Lastly, I'll add some text to label the map:

```xml
<text x="0" y="-120" font-family="Verdana" font-size="16">Mermaid Landscape</text>
```

Here's the complete SVG code for the mermaid landscape map:

```xml
<svg xmlns="http://www.w3.org/2000/svg" viewBox="-100 -100 200 200">
  <defs>
    <!-- ... -->
  </defs>

  <!-- Sea and sea floor -->
  <circle cx="0" cy="0" r="90" fill="url(#sea)" />
  <circle cx="0" cy="0" r="85" fill="url(#land)" />

  <!-- Mermaid tails -->
  <path d="M -75 0 A 75 75 0 1 1 75 0" stroke="none" fill="url(#mermaid_tail)" />
  <!-- ... other mermaids ... -->

  <!-- Mermaid hair -->
  <path d="M -75 0 Q -60 -20 0 -30 Q 60 -20 75 0" stroke="black" fill="transparent" stroke-width="1.5" />
  <!-- ... other mermaids' hair ... -->

  <!-- Treasure chests -->
  <rect x="-60" y="-40" width="20" height="10" fill="url(#treasure_chest)" />
  <!-- ... other treasure chests ... -->

  <!-- Map label -->
  <text x="0" y="-120" font-family="Verdana" font-size="16">Mermaid Landscape</text>
</svg>